#! /bin/sh

wid=$1
class=$2
instance=$3
consequences=$4
procCommand=$(ps -p "$(xdo pid "$wid")" -o comm= 2>/dev/null)

echo $@ >> ~/.rules_cmd.log
echo $procCommand >> ~/.rules_cmd.log

case "$class" in
	'Wrapper-2.0')
        eval "$consequences"
        echo "state=floating center=on follow=on rectangle=800x400+0+0"
        ;;
    'Xfce4-panel')
        eval "$consequences"
        echo "monitor=primary state=floating follow=on"
        ;;
    'Xfce4-settings-manager') ;&
    'Blueman-manager') ;&
    'Blueberry.py')
        eval "$consequences"
        echo "monitor=primary state=floating center=on follow=on"
        ;;
    'Netzone')
        monitor=$(bspc query --monitor focused --monitors --names)
        dimensions=$(xrandr --query | grep "^${monitor} " | grep -P -o '\d+x\d+[-+]\d+[-+]\d+' | grep -oP '\d+')
        # notify-send "$dimensions"
        screen_w=$(echo -e "$dimensions" | head -n 1)
        screen_h=$(echo -e "$dimensions" | head -n 2 | tail -n 1)
        screen_x=$(echo -e "$dimensions" | head -n 3 | tail -n 1)
        screen_y=$(echo -e "$dimensions" | head -n 4 | tail -n 1)
        # notify-send "$screen_w $screen_h"

        netzone_w=250
        netzone_h=450
        let "netzone_pos_x = $screen_x + $screen_w - $netzone_w - 20"
        let "netzone_pos_y = $screen_y + $screen_h - $netzone_h - 20"

        # notify-send "$netzone_pos_x $netzone_pos_y"
        eval "$consequences"
        echo "state=floating rectangle=250x450+$netzone_pos_x+$netzone_pos_y"
        ;;
    'Galculator') 
        eval "$consequences"
        echo "state=floating center=on follow=on"
        ;;
    firefox_app_*)
        eval "$consequences"
        echo "desktop=M follow=on"
        ;;
    '')
        case $procCommand in
            (spotify)
                echo "desktop=M follow=on"
                ;;
        esac;;
esac
